/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/Models/Fish.gltf -t -r public 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import {Euler, Vector3} from 'three'
import {MeshProps} from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Plane: THREE.Mesh
    Plane001: THREE.Mesh
    Plane002: THREE.Mesh
    Plane003: THREE.Mesh
    Plane004: THREE.Mesh
    Plane005: THREE.Mesh
    Sphere: THREE.Mesh
    Sphere001: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshPhysicalMaterial
    ['Material.001']: THREE.MeshPhysicalMaterial
    ['Material.003']: THREE.MeshStandardMaterial
  }
}

type FishProps = JSX.IntrinsicElements['group'] & {
    pushRef?: (ref: any) => void,
    velocity?: Vector3,
    position?: Vector3,
    acc?: Vector3,
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function FishModel(props: FishProps) {
  const { nodes, materials } = useGLTF('/Models/Fish.gltf') as GLTFResult
    const initRotation = new Euler( Math.PI/2, 0, 0, 'XYZ' )
    //const initRotation = new Euler( Math.PI/2, 0, 0, 'XYZ' )
  return (
    <group {...props}
            name={props.name}
           dispose={null}
           ref={(ref)=>{
               if(ref && props.pushRef){
                   props.pushRef(ref)
               }
           }}
    >
      <mesh rotation={initRotation}  geometry={nodes.Cube.geometry} material={materials['Material.002']} />
      <mesh rotation={initRotation}  geometry={nodes.Plane.geometry} material={materials['Material.002']} />
      <mesh rotation={initRotation}  geometry={nodes.Plane001.geometry} material={materials['Material.001']} />
      <mesh rotation={initRotation}  geometry={nodes.Plane002.geometry} material={materials['Material.001']} />
      <mesh rotation={initRotation}  geometry={nodes.Plane003.geometry} material={materials['Material.001']} />
      <mesh rotation={initRotation}  geometry={nodes.Plane004.geometry} material={materials['Material.001']} />
      <mesh rotation={initRotation}  geometry={nodes.Plane005.geometry} material={materials['Material.001']} />
      <mesh rotation={initRotation}  geometry={nodes.Sphere.geometry} material={materials['Material.003']} />
      <mesh rotation={initRotation}  geometry={nodes.Sphere001.geometry} material={materials['Material.001']} />
        {   props.name === "fish0" &&

            <mesh visible={true} userData={{ hello: 'world' }}>
                <sphereGeometry args={[10, 8, 8]} />
                <meshStandardMaterial color="red" transparent={true} opacity={0.1} />
            </mesh>
        }
    </group>
  )
}

useGLTF.preload('/Models/Fish.gltf')
